z = c(2,4)
y-z
c(1,2,3) + c(1,2,3,4,5,6)
x= rbind(c(1,2),c(3,4),c(5,6))
x + c(1,2)
x= rbind(c(1,2),c(3,4),c(5,6))
x + c(1,1) #(1,1) was replicated and added everywhere
x= rbind(c(1,1),c(1,1),c(1,1))
x + c(1,5) #(1,1) was replicated and added everywhere
matrix(nrow = 3, ncol = 2, data = c(1,2,1,2,1,2))
2+3
"+"(2,3)
x = c(1,2,3)
x + c(1,1,1)
x*x(1,0,1)
x*c(1,0,1)
x/c(2,2,2)
x%%c(2,2,2)
y = c(1,2,3,4,5,6,7,8,9)
y[c(1,3)]
y[1:3]
y[1:3]
y = c(2,4,6,8,10,12,14,16,18)
y[c(1,3)]
y[1:3]
y[c(1,1,3)]
y[-1]
y[-1:-3]
y[-3:-1]
y[-length(y)]
5:8
i = 1:10
j = i:i-1
i = 10
j = i:i-1
j
j = 1:i-1 # operator precendence; This is read as i:i then -1
j
j = i:(i-1)
j
j = 1:(i-1)
j
i = 10
j = 1:i-1 # operator precendence; This is read as i:i then -1
j
i = 10
j = 1:i-5 # operator precendence; This is read as i:i then -1
j # all the values from 1:10 are reduced by -1
j = 1:(i-5)
j
seq(from:10, to :20, by = 2)
seq(from = 10, to = 20, by = 2)
seq(2,20,2)
seq(2,10, length = 5)
x = NULL
for(i in 1:length(X)){
print(i)
}
x = NULL
for(i in 1:length(x)){
print(i)
}
length(x)
seq(10)
x = NULL
for(i in seq(x)){
print(i)
}
x = rep(8,4)
x
x = rep(c(1,2,2), 5)
x
x = rep(c(1,2,3), 3)
x
x = rep(1:3, 3)
x
x = rep(1:3, each = 2)
x
x = rep(seq(3), 3)
x
x = seq(1,10, 2)
any(x>8)
all(x>8)
all(x>12)
all(x<12)
findruns = function(x){
runindex = NULL
if(length(x) == 0) return(0)
runcount = 0;
for(i in 1:length(x)){
if(x[i]==0 & runcount > 1){
runcount = 0
runindex + c(current.run.index)
}
if(x[i] == 1 ){
if(runcount ==0){ current.run.index = i}
runcount = runcount + 1
}
}
return(runindex)
}
findruns(c(1,1,1))
runindex = NULL
runindex+c(1)
runindex = 0
runindex+c(1)
a = list()
a + c(1)
a.append(1)
?append
x = NULL
a = c
a
a = 1
append(x,a)
x
a
append(x,a,a)
b= 2
d= append(x,a)
append(d,b)
findruns = function(x){
runindex = NULL
if(length(x) == 0) return(0)
runcount = 0;
for(i in 1:length(x)){
if(x[i]==0 & runcount > 1){
runcount = 0
append(runindex,current.run.index)
}
if(x[i] == 1 ){
if(runcount ==0){ current.run.index = i}
runcount = runcount + 1
}
}
return(runindex)
}
findruns(c(1,1,1))
findruns = function(x){
runindex = NULL
if(length(x) == 0) return(0)
runcount = 0;
for(i in 1:length(x)){
if(x[i]==0){
if(runcount > 1){append(runindex,current.run.index)}
runcount = 0
}
if(x[i] == 1 ){
if(runcount ==0){ current.run.index = i}
runcount = runcount + 1
}
}
return(runindex)
}
findruns(c(1,1))
findrunsbook = function(x,k){
n = length(x)
runs = NULL
for ( in in 1:(n-K+1)){
if(all(x[i:i+k-1] == 1)) runs = c(runs, i)
}
return(runs)
}
findrunsbook = function(x,k){
n = length(x)
runs = NULL
for ( in in 1:(n-K+1)){
if(all(x[i:i+k-1] == 1)) {runs = c(runs, i) }
}
return(runs)
}
findrunsbook = function(x,k){
n = length(x)
runs = NULL
for ( in in 1:(n-K+1)){
if(all(x[i:i+k-1] == 1)) {runs = c(runs, i) }
}
return(runs)
}
findrunsbook = function(x,k){
n = length(x)
runs = NULL
for ( in in 1:(n-K+1)){
if(all(x[i:i+k-1] == 1)) {runs = c(runs, i) }
}
return(runs)
}
findrunsbook = function(x,k){
n = length(x)
runs = NULL
for (i in 1:(n-K+1)){
if(all(x[i:i+k-1] == 1)) {runs = c(runs, i) }
}
return(runs)
}
findrunsbook(c(1,1,1,1),3)
findrunsbook(y,3)
y = c(1,1,1,)
findrunsbook(y,3)
findrunsbook = function(x,k){
n = length(x)
runs = NULL
for (i in 1:(n-k+1)){
if(all(x[i:i+k-1] == 1)) {runs = c(runs, i) }
}
return(runs)
}
y = c(1,1,1,)
y = c(1,1,1)
findrunsbook(y,3)
pred.rain = function(x, k) {
n = length(x)
result = rep(NA,n)
for(i in 1:n-k+1){
if(sum(x[i:i+k-1])>=k/2){
result[i+k] = 1
}
else{
result[i+k]  = 0
}
}
}
y = c(1,0,1,1,0,1,0,1,1,1,0,0,0)
pred.rain(y, 3)
pred.rain = function(x, k) {
n = length(x)
result = rep(NA,n)
for(i in 1:n-k+1){
if(sum(x[i:i+k-1])>=k/2){
result[i+k] = 1
}
else{
result[i+k]  = 0
}
}
return(result)
}
y = c(1,0,1,1,0,1,0,1,1,1,0,0,0)
pred.rain(y, 3)
knitr::opts_chunk$set(echo = TRUE)
library(HistData)
install.packages("HistData")
install.packages("resample")
install.packages("simpleboot")
library(HistData)
library(HistData)
library(resample)
library(simpleboot)
auto = read.csv("Auto.csv", header = TRUE, stringsAsFactors = FALSE)
numcols = c("price","bore","stroke","horsepower","peak.rpm")
auto[, numcols] <- lapply(auto[, numcols], as.numeric)
auto = auto[complete.cases(auto),]
library(HistData)
library(resample)
library(simpleboot)
auto = read.csv("Auto.csv", header = TRUE, stringsAsFactors = FALSE)
numcols = c("price","bore","stroke","horsepower","peak.rpm")
auto[, numcols] <- lapply(auto[, numcols], as.numeric)
auto = auto[complete.cases(auto),]
#Compare the difference of the bootstrap resampled mean of the log price of autos grouped by 1) aspiration and 2) fuel type.
#Use both numerical and graphical methods for your comparison. Are these means different within a 95% confidence interval?
#How do your conclusions compare to the results you obtained using the t-test last week?
# Multi-Histogram Plotting function
plot.hist = function(a, b, cols = c("Population A","Population B"), nbins = 80, p = 0.05 ){
dat = c(a,b)
maxs = max(dat, na.rm = TRUE)
mins = min(dat, na.rm = TRUE)
breaks = seq(maxs, mins, length.out = (nbins+1))
par(mfrow = c(2,1))
hist(a, breaks = breaks, main = paste("Histogram of ", cols[1]), xlab  = cols[1])
abline(v = mean(a), lwd = 4, col = "red")
abline(v = quantile(a, probs = p/2), lty = 3, col = "red", lwd = 3)
abline(v = quantile(a, probs = (1-p/2)), lty = 3, col = "red", lwd = 3)
hist(b, breaks = breaks, main = paste("Histogram of ", cols[2]),  xlab = cols[2])
abline(v = mean(b), lwd = 4, col = "red")
abline(v = quantile(b, probs = p/2), lty = 3, col = "red", lwd = 3)
abline(v = quantile(b, probs = (1-p/2)), lty = 3, col = "red", lwd = 3)
}
#Comparing  Log(Price) v.s Aspiration
auto.turbo.log.price = (auto[auto$aspiration=="turbo",]$price)
auto.std.log.price = (auto[auto$aspiration == "std",]$price)
plot.hist(auto.turbo.log.price, auto.std.log.price, c(" Auto Price: Aspiration = Turbo", "Auto Price: Aspiration = Std"))
#T-test
t.test(auto.turbo.log.price, auto.std.log.price, alternative = "two.sided")
#Bootstrap
mean.boot.auto.turbo.price = one.boot(auto.turbo.log.price, mean, R = 100000)
mean.boot.auto.std.price = one.boot(auto.std.log.price, mean, R = 100000)
plot.hist(mean.boot.auto.turbo.price$t, mean.boot.auto.std.price$t, c(" Bootstrapping Auto Price: Aspiration = Turbo", " Bootstrapping Auto Price: Aspiration = Std "))
print(paste0("Mean value of Auto Price with Aspiration = Turbo given by Bootstrap: $",mean.boot.auto.gas.price$t0))
auto.turbo.log.price = (auto[auto$aspiration=="turbo",]$price)
auto.std.log.price = (auto[auto$aspiration == "std",]$price)
plot.hist(auto.turbo.log.price, auto.std.log.price, c(" Auto Price: Aspiration = Turbo", "Auto Price: Aspiration = Std"))
t.test(auto.turbo.log.price, auto.std.log.price, alternative = "two.sided")
mean.boot.auto.turbo.price = one.boot(auto.turbo.log.price, mean, R = 100000)
mean.boot.auto.std.price = one.boot(auto.std.log.price, mean, R = 100000)
mean.boot.auto.std.price = one.boot(auto.std.log.price, mean, R = 100000)
plot.hist(mean.boot.auto.turbo.price$t, mean.boot.auto.std.price$t, c(" Bootstrapping Auto Price: Aspiration = Turbo", " Bootstrapping Auto Price: Aspiration = Std "))
print(paste0("Mean value of Auto Price with Aspiration = Turbo given by Bootstrap: $",mean.boot.auto.turbo.price$t0))
print(paste0("Mean value of Auto Price with Aspiration = Std given by Bootstrap: $",mean.boot.auto.std.price$t0))
auto.gas.log.price = (auto[auto$fuel.type=="gas",]$price)
auto.diesel.log.price = (auto[auto$fuel.type == "diesel",]$price)
plot.hist(auto.gas.log.price, auto.diesel.log.price, c(" Auto Price: Fuel Type = Gas", "Auto Price: Fuel Type = Diesel "))
t.test(auto.gas.log.price, auto.diesel.log.price, alternative = "two.sided")
mean.boot.auto.gas.price = one.boot(auto.gas.log.price, mean, R = 100000)
mean.boot.auto.gas.price = one.boot(auto.gas.log.price, mean, R = 100000)
mean.boot.auto.diesel.price = one.boot(auto.diesel.log.price, mean, R = 100000)
mean.boot.auto.gas.price = one.boot(auto.gas.log.price, mean, R = 100000)
mean.boot.auto.diesel.price = one.boot(auto.diesel.log.price, mean, R = 100000)
plot.hist(mean.boot.auto.gas.price$t, mean.boot.auto.diesel.price$t, c(" Bootstrapping Auto Price: Fuel Type = Gas", " Bootstrapping Auto Price: Fuel Type = Diesel "))
plot.hist(mean.boot.auto.gas.price$t, mean.boot.auto.diesel.price$t, c(" Bootstrapping Auto Price: Fuel Type = Gas", " Bootstrapping Auto Price: Fuel Type = Diesel "))
print(paste0("Mean value of Auto Price with fuel = Gas given by Bootstrap: $",mean.boot.auto.gas.price$t0))
auto = read.csv("Auto.csv", header = TRUE, stringsAsFactors = FALSE, na.strings = "?")
numcols = c("price","bore","stroke","horsepower","peak.rpm")
auto[, numcols] <- lapply(auto[, numcols], as.numeric)
auto = auto[complete.cases(auto),]
boxplot(price~num.of.doors, data = auto)
auto.door.aov = aov(price ~ as.factor(num.of.doors), data = auto)
summary(auto.door.aov)
print(auto.door.aov)
tukey.door.anova = TukeyHSD(auto.door.aov)
tukey.door.anova
plot(tukey.door.anova)
boxplot(price~body.style, data = auto)
auto.body.aov = aov(price ~ as.factor(body.style), data = auto)
summary(auto.body.aov)
print(auto.body.aov)
tukey.body.anova = TukeyHSD(auto.body.aov)
tukey.body.anova
plot(tukey.body.anova)
auto.twoDoor.price = log(auto[auto$num.of.doors=="two",]$price)
auto.fourDoor.price = log(auto[auto$num.of.doors == "four",]$price)
mean.boot.auto.twoDoor.price = one.boot(auto.twoDoor.price, mean, R = 100000)
mean.boot.auto.twoDoor.price = one.boot(auto.twoDoor.price, mean, R = 100000)
mean.boot.auto.fourDoor.price = one.boot(auto.fourDoor.price, mean, R = 100000)
plot.hist(mean.boot.auto.twoDoor.price$t, mean.boot.auto.fourDoor.price$t, c(" Bootstrapping Auto Price: Number of Doors = 2", " Bootstrapping Auto Price: Number of Doors = 4 "))
print(paste0("Mean value of Auto Price with number of Doors = 2; given by Bootstrap: $",mean.boot.auto.twoDoor.price$t0))
print(paste0("Mean value of Auto Price with number of doors = 4; Door given by Bootstrap: $",mean.boot.auto.fourDoor.price$t0))
auto.convertible.price = log(auto[auto$body.style =="convertible",]$price)
auto.hardtop.price = log(auto[auto$body.style =="hardtop",]$price)
auto.hatchback.price = log(auto[auto$body.style =="hatchback",]$price)
auto.sedan.price = log(auto[auto$body.style =="sedan",]$price)
auto.wagon.price = log(auto[auto$body.style =="wagon",]$price)
mean.boot.auto.convertible.price = one.boot(auto.convertible.price, mean, R = 100000)
mean.boot.auto.hardtop.price = one.boot(auto.hardtop.price, mean, R = 100000)
mean.boot.auto.hatchback.price = one.boot(auto.hatchback.price, mean, R = 100000)
mean.boot.auto.wagon.price = one.boot(auto.wagon.price, mean, R = 100000)
plot.hist(mean.boot.auto.convertible.price$t, mean.boot.auto.hardtop.price$t, c(" Bootstrapping Auto Price: Body Style = Convertible", " Bootstrapping Auto Price: Body Style = Hard Top "))
print(paste0("Mean value of Auto Price with body style = Convertible; given by Bootstrap: $",mean.boot.auto.convertible.price$t0))
print(paste0("Mean value of Auto Price with body style = Hardtop given by Bootstrap: $",mean.boot.auto.hardtop.price$t0))
plot.hist(mean.boot.auto.convertible.price$t, mean.boot.auto.hatchback.price$t, c(" Bootstrapping Auto Price: Body Style = Convertible", " Bootstrapping Auto Price: Body Style = Hatchback "))
print(paste0("Mean value of Auto Price with body style = Convertible; given by Bootstrap: $",mean.boot.auto.convertible.price$t0))
print(paste0("Mean value of Auto Price with body style = Hatchback; given by Bootstrap: $",mean.boot.auto.hatchback.price$t0))
plot.hist(mean.boot.auto.convertible.price$t, mean.boot.auto.sedan.price$t, c(" Bootstrapping Auto Price: Body Style = Convertible", " Bootstrapping Auto Price: Body Style = Sedan "))
print(paste0("Mean value of Auto Price with body style = Convertible; given by Bootstrap: $",mean.boot.auto.convertible.price$t0))
plot.hist(mean.boot.auto.convertible.price$t, mean.boot.auto.sedan.price$t, c(" Bootstrapping Auto Price: Body Style = Convertible", " Bootstrapping Auto Price: Body Style = Sedan "))
mean.boot.auto.sedan.price = one.boot(auto.sedan.price, mean, R = 100000)
plot.hist(mean.boot.auto.convertible.price$t, mean.boot.auto.sedan.price$t, c(" Bootstrapping Auto Price: Body Style = Convertible", " Bootstrapping Auto Price: Body Style = Sedan "))
print(paste0("Mean value of Auto Price with body style = Convertible; given by Bootstrap: $",mean.boot.auto.convertible.price$t0))
print(paste0("Mean value of Auto Price with body style = Sedan; given by Bootstrap: $",mean.boot.auto.sedan.price$t0))
plot.hist(mean.boot.auto.convertible.price$t, mean.boot.auto.wagon.price$t, c(" Bootstrapping Auto Price: Body Style = Convertible", " Bootstrapping Auto Price: Body Style = Wagon "))
print(paste0("Mean value of Auto Price with body style = Convertible; given by Bootstrap: $",mean.boot.auto.convertible.price$t0))
print(paste0("Mean value of Auto Price with body style = Wagon; given by Bootstrap: $",mean.boot.auto.wagon.price$t0))
plot.hist(mean.boot.auto.hatchback.price$t, mean.boot.auto.hardtop.price$t, c(" Bootstrapping Auto Price: Body Style = Hatchback", " Bootstrapping Auto Price: Body Style = Hard Top "))
print(paste0("Mean value of Auto Price with body style = Hatchback; given by Bootstrap: $",mean.boot.auto.hatchback.price$t0))
print(paste0("Mean value of Auto Price with body style = Hardtop; given by Bootstrap: $",mean.boot.auto.hardtop.price$t0))
plot.hist(mean.boot.auto.sedan.price$t, mean.boot.auto.hardtop.price$t, c(" Bootstrapping Auto Price: Body Style = Sedan", " Bootstrapping Auto Price: Body Style = Hard Top "))
print(paste0("Mean value of Auto Price with body style = Sedan; given by Bootstrap: $",mean.boot.auto.sedan.price$t0))
print(paste0("Mean value of Auto Price with body style = Hardtop; given by Bootstrap: $",mean.boot.auto.hardtop.price$t0))
plot.hist(mean.boot.auto.wagon.price$t, mean.boot.auto.hardtop.price$t, c(" Bootstrapping Auto Price: Body Style = Wagon", " Bootstrapping Auto Price: Body Style = Hard Top "))
print(paste0("Mean value of Auto Price with body style = Wagon; given by Bootstrap: $",mean.boot.auto.wagon.price$t0))
print(paste0("Mean value of Auto Price with body style = Hardtop; given by Bootstrap: $",mean.boot.auto.hardtop.price$t0))
plot.hist(mean.boot.auto.hatchback.price$t, mean.boot.auto.sedan.price$t, c(" Bootstrapping Auto Price: Body Style = Hatchback", " Bootstrapping Auto Price: Body Style = Sedan "))
print(paste0("Mean value of Auto Price with body style = Hatchback; given by Bootstrap: $",mean.boot.auto.hatchback.price$t0))
print(paste0("Mean value of Auto Price with body style = Sedan; given by Bootstrap: $",mean.boot.auto.sedan.price$t0))
plot.hist(mean.boot.auto.hatchback.price$t, mean.boot.auto.wagon.price$t, c(" Bootstrapping Auto Price: Body Style = Hatchback", " Bootstrapping Auto Price: Body Style = Wagon "))
print(paste0("Mean value of Auto Price with body style = Hatchback; given by Bootstrap: $",mean.boot.auto.hatchback.price$t0))
print(paste0("Mean value of Auto Price with body style = Wagon; given by Bootstrap: $",mean.boot.auto.wagon.price$t0))
plot.hist(mean.boot.auto.sedan.price$t, mean.boot.auto.wagon.price$t, c(" Bootstrapping Auto Price: Body Style = Sedan", " Bootstrapping Auto Price: Body Style = Wagon "))
print(paste0("Mean value of Auto Price with body style = Sedan; given by Bootstrap: $",mean.boot.auto.sedan.price$t0))
print(paste0("Mean value of Auto Price with body style = Wagon; given by Bootstrap: $",mean.boot.auto.wagon.price$t0))
t.test(auto.turbo.log.price, auto.std.log.price, alternative = "two.sided")
auto = read.csv("Auto.csv", header = TRUE, stringsAsFactors = FALSE)
#Loading the files
auto = read.csv("Auto.csv", header = TRUE, stringsAsFactors = FALSE)
numcols = c("price","bore","stroke","horsepower","peak.rpm")
auto[, numcols] <- lapply(auto[, numcols], as.numeric)
auto = auto[complete.cases(auto),]
#Comparing  Log(Price) v.s Aspiration
auto.turbo.log.price = (auto[auto$aspiration=="turbo",]$price)
auto.std.log.price = (auto[auto$aspiration == "std",]$price)
plot.hist(auto.turbo.log.price, auto.std.log.price, c(" Auto Price: Aspiration = Turbo", "Auto Price: Aspiration = Std"))
#T-test
t.test(auto.turbo.log.price, auto.std.log.price, alternative = "two.sided")
plot.hist(auto.turbo.log.price, auto.std.log.price, c(" Auto Price: Aspiration = Turbo", "Auto Price: Aspiration = Std"), p = 0)
plot.hist(auto.turbo.log.price, auto.std.log.price, c(" Auto Price: Aspiration = Turbo", "Auto Price: Aspiration = Std"), p = 1)
plot.hist = function(a, b, cols = c("Population A","Population B"), nbins = 80, p = 0.05 ){
dat = c(a,b)
maxs = max(dat, na.rm = TRUE)
mins = min(dat, na.rm = TRUE)
breaks = seq(maxs, mins, length.out = (nbins+1))
par(mfrow = c(2,1))
hist(a, breaks = breaks, main = paste("Histogram of ", cols[1]), xlab  = cols[1])
abline(v = mean(a), lwd = 4, col = "red")
if(p!=0){
abline(v = quantile(a, probs = p/2), lty = 3, col = "red", lwd = 3)
abline(v = quantile(a, probs = (1-p/2)), lty = 3, col = "red", lwd = 3)
}
hist(b, breaks = breaks, main = paste("Histogram of ", cols[2]),  xlab = cols[2])
abline(v = mean(b), lwd = 4, col = "red")
if(p!=0){
abline(v = quantile(b, probs = p/2), lty = 3, col = "red", lwd = 3)
abline(v = quantile(b, probs = (1-p/2)), lty = 3, col = "red", lwd = 3)
}
}
plot.hist(auto.turbo.log.price, auto.std.log.price, c(" Auto Price: Aspiration = Turbo", "Auto Price: Aspiration = Std"), p = 0)
t.test(auto.turbo.log.price, auto.std.log.price, alternative = "two.sided")
mean.boot.auto.turbo.price = one.boot(auto.turbo.log.price, mean, R = 100000)
mean.boot.auto.std.price = one.boot(auto.std.log.price, mean, R = 100000)
plot.hist(mean.boot.auto.turbo.price$t, mean.boot.auto.std.price$t, c(" Bootstrapping Auto Price: Aspiration = Turbo", " Bootstrapping Auto Price: Aspiration = Std "))
#Comparing  Log(Price) vs. Fuel Type
auto.gas.log.price = (auto[auto$fuel.type=="gas",]$price)
auto.diesel.log.price = (auto[auto$fuel.type == "diesel",]$price)
plot.hist(auto.gas.log.price, auto.diesel.log.price, c(" Auto Price: Fuel Type = Gas", "Auto Price: Fuel Type = Diesel "))
plot.hist(auto.gas.log.price, auto.diesel.log.price, c(" Auto Price: Fuel Type = Gas", "Auto Price: Fuel Type = Diesel "), p = 0)
t.test(auto.gas.log.price, auto.diesel.log.price, alternative = "two.sided")
mean.boot.auto.gas.price = one.boot(auto.gas.log.price, mean, R = 100000)
mean.boot.auto.diesel.price = one.boot(auto.diesel.log.price, mean, R = 100000)
plot.hist(mean.boot.auto.gas.price$t, mean.boot.auto.diesel.price$t, c(" Bootstrapping Auto Price: Fuel Type = Gas", " Bootstrapping Auto Price: Fuel Type = Diesel "))
auto = read.csv("Auto.csv", header = TRUE, stringsAsFactors = FALSE, na.strings = "?")
numcols = c("price","bore","stroke","horsepower","peak.rpm")
auto[, numcols] <- lapply(auto[, numcols], as.numeric)
auto = auto[complete.cases(auto),]
boxplot(price~body.style, data = auto)
auto.body.aov = aov(price ~ as.factor(body.style), data = auto)
summary(auto.body.aov)
print(auto.body.aov)
tukey.body.anova = TukeyHSD(auto.body.aov)
tukey.body.anova
plot(tukey.body.anova)
auto = read.csv("Auto.csv", header = TRUE, stringsAsFactors = FALSE)
numcols = c("price","bore","stroke","horsepower","peak.rpm")
auto[, numcols] <- lapply(auto[, numcols], as.numeric)
auto = auto[complete.cases(auto),]
boxplot(price~body.style, data = auto)
auto.body.aov = aov(price ~ as.factor(body.style), data = auto)
summary(auto.body.aov)
print(auto.body.aov)
tukey.body.anova = TukeyHSD(auto.body.aov)
tukey.body.anova
plot(tukey.body.anova)
mean.twoboot.auto.sedan.wagon = two.boot(auto.wagon.price, auto.wagon.price, R = 100000)
mean.twoboot.auto.hatchback.wagon = two.boot(auto.hatchback.price, auto.wagon.price, R = 100000)
mean.twoboot.auto.convertible.hardtop = two.boot(auto.convertible.price, auto.hardtop.price,mean, R = 100000)
plot.hist(mean.twoboot.auto.convertible.hardtop)
plot.hist2 = function(a, cols = c("Population A"), nbins = 80, p = 0.05 ){
dat = c(a)
maxs = max(dat, na.rm = TRUE)
mins = min(dat, na.rm = TRUE)
breaks = seq(maxs, mins, length.out = (nbins+1))
par(mfrow = c(2,1))
hist(a, breaks = breaks, main = paste("Histogram of ", cols[1]), xlab  = cols[1])
abline(v = mean(a), lwd = 4, col = "red")
if(p!=0){
abline(v = quantile(a, probs = p/2), lty = 3, col = "red", lwd = 3)
abline(v = quantile(a, probs = (1-p/2)), lty = 3, col = "red", lwd = 3)
}
}
plot.hist2(mean.boot.auto.convertible.price$t, mean.boot.auto.hardtop.price$t, c(" Bootstrapping Auto Price: Body Style = Convertible"))
plot.hist2(mean.boot.auto.convertible.hardtop$t, c(" Bootstrapping Auto Price: Body Style = Convertible"))
mean.twoboot.auto.convertible.hardtop = two.boot(auto.convertible.price, auto.hardtop.price,mean, R = 100000)
plot.hist2(mean.boot.auto.convertible.hardtop$t, c(" Bootstrapping Auto Price: Body Style = Convertible"))
plot.hist2(mean.twoboot.auto.convertible.hardtop$t, c(" Bootstrapping Auto Price: Body Style = Convertible"))
mean.twoboot.auto.convertible.hardtop = two.boot(auto.convertible.price, auto.hardtop.price,mean, R = 100000)
mean.twoboot.auto.convertible.hatchback =two.boot(auto.convertible.price, auto.hatchback.price, mean, R = 100000)
mean.twoboot.auto.convertible.sedan = two.boot(auto.convertible.price, auto.sedan.price,mean, R = 100000)
mean.twoboot.auto.convertible.wagon = two.boot(auto.convertible.price, auto.wagon.price,mean, R = 100000)
mean.twoboot.auto.hatchback.hardtop = two.boot(auto.hatchback.price, auto.hardtop.price,mean, R = 100000)
mean.twoboot.auto.sedan.hardtop = two.boot(auto.sedan.price, auto.hardtop.price,mean, R = 100000)
mean.twoboot.auto.wagon.hardtop = two.boot(auto.wagon.price, auto.hardtop.price,mean, R = 100000)
mean.twoboot.auto.hatchback.sedan = two.boot(auto.hatchback.price, auto.sedan.price,mean, R = 100000)
mean.twoboot.auto.hatchback.wagon = two.boot(auto.hatchback.price, auto.wagon.price,mean, R = 100000)
mean.twoboot.auto.sedan.wagon = two.boot(auto.wagon.price, auto.wagon.price,mean, R = 100000)
plot.hist2(mean.twoboot.auto.convertible.hatchback$t, c("Histogram of Difference of Means: Auto - Convertible and Hatchback"))
plot.hist2(mean.twoboot.auto.convertible.wagon$t, c("Histogram of Difference of Means: Auto - Convertible and Wagon"))
plot.hist2(mean.twoboot.auto.convertible.sedan$t, c("Histogram of Difference of Means: Auto - Convertible and Sedan"))
plot.hist2(mean.twoboot.auto.hatchback.hardtop$t, c("Histogram of Difference of Means: Auto - Hatchback and Hardtop"))
plot.hist2(mean.twoboot.auto.sedan.hardtop$t, c("Histogram of Difference of Means: Auto - Sedan and Hardtop"))
plot.hist2(mean.twoboot.auto.wagon.hardtop$t, c("Histogram of Difference of Means: Auto - Wagon and Hardtop"))
plot.hist2(mean.twoboot.auto.hatchback.sedan$t, c("Histogram of Difference of Means: Auto - Hatchback and Sedan"))
plot.hist2(mean.twoboot.auto.hatchback.wagon$t, c("Histogram of Difference of Means: Auto - Hatchback and Wagon"))
plot.hist2(mean.twoboot.auto.sedan.wagon$t, c("Histogram of Difference of Means: Auto - Sedan and Wagon")
)
print(auto.body.aov)
summary(auto.body.aov)
tukey.body.anova
plot.hist2(mean.twoboot.auto.convertible.sedan$t, c("Histogram of Difference of Means: Auto - Convertible and Sedan"))
plot.hist2(mean.twoboot.auto.hatchback.hardtop$t, c("Histogram of Difference of Means: Auto - Hatchback and Hardtop"))
plot.hist2(mean.twoboot.auto.sedan.hardtop$t, c("Histogram of Difference of Means: Auto - Sedan and Hardtop"))
plot.hist2(mean.twoboot.auto.hatchback.hardtop$t, c("Histogram of Difference of Means: Auto - Hatchback and Hardtop"))
plot.hist2(mean.twoboot.auto.wagon.hardtop$t, c("Histogram of Difference of Means: Auto - Wagon and Hardtop"))
plot.hist2(mean.twoboot.auto.sedan.hardtop$t, c("Histogram of Difference of Means: Auto - Sedan and Hardtop"))
plot.hist2(mean.twoboot.auto.wagon.hardtop$t, c("Histogram of Difference of Means: Auto - Wagon and Hardtop"))
plot.hist2(mean.twoboot.auto.convertible.hardtop$t, c("Histogram of Difference of Means: Auto - Convertible and Hardtop"))
plot.hist2(mean.twoboot.auto.convertible.hatchback$t, c("Histogram of Difference of Means: Auto - Convertible and Hatchback"))
plot.hist2(mean.twoboot.auto.convertible.wagon$t, c("Histogram of Difference of Means: Auto - Convertible and Wagon"))
plot.hist2(mean.twoboot.auto.convertible.sedan$t, c("Histogram of Difference of Means: Auto - Convertible and Sedan"))
plot.hist2(mean.twoboot.auto.hatchback.hardtop$t, c("Histogram of Difference of Means: Auto - Hatchback and Hardtop"))
plot.hist2(mean.twoboot.auto.sedan.hardtop$t, c("Histogram of Difference of Means: Auto - Sedan and Hardtop"))
plot.hist2(mean.twoboot.auto.wagon.hardtop$t, c("Histogram of Difference of Means: Auto - Wagon and Hardtop"))
plot.hist2(mean.twoboot.auto.hatchback.sedan$t, c("Histogram of Difference of Means: Auto - Hatchback and Sedan"))
plot.hist2(mean.twoboot.auto.hatchback.wagon$t, c("Histogram of Difference of Means: Auto - Hatchback and Wagon"))
plot.hist2(mean.twoboot.auto.sedan.wagon$t, c("Histogram of Difference of Means: Auto - Sedan and Wagon"))
